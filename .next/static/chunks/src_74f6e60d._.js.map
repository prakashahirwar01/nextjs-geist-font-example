{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/driver/dashboard/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Label } from \"@/components/ui/label\"\nimport Link from \"next/link\"\n\ninterface RideRequest {\n  id: string\n  pickup: string\n  dropoff: string\n  distance: string\n  estimatedFare: number\n  customerName: string\n  requestedAt: string\n  pickupTime?: string\n}\n\ninterface DriverStats {\n  todayEarnings: number\n  weeklyEarnings: number\n  totalRides: number\n  rating: number\n  onlineHours: number\n}\n\ninterface CurrentRide {\n  id: string\n  pickup: string\n  dropoff: string\n  customerName: string\n  customerPhone: string\n  status: 'accepted' | 'arriving' | 'in-progress'\n  fare: number\n}\n\nexport default function DriverDashboard() {\n  const [isOnline, setIsOnline] = useState(false)\n  const [availableRides, setAvailableRides] = useState<RideRequest[]>([])\n  const [currentRide, setCurrentRide] = useState<CurrentRide | null>(null)\n  const [driverStats, setDriverStats] = useState<DriverStats | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchDriverData = async () => {\n      setLoading(true)\n      \n      // Simulate API calls\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      // Mock driver stats\n      const mockStats: DriverStats = {\n        todayEarnings: 127.50,\n        weeklyEarnings: 892.75,\n        totalRides: 234,\n        rating: 4.8,\n        onlineHours: 6.5\n      }\n\n      // Mock available rides\n      const mockRides: RideRequest[] = [\n        {\n          id: \"req-001\",\n          pickup: \"Downtown Mall, 456 Oak St\",\n          dropoff: \"Central Station\",\n          distance: \"3.2 km\",\n          estimatedFare: 12.50,\n          customerName: \"Sarah Johnson\",\n          requestedAt: new Date(Date.now() - 2 * 60000).toISOString()\n        },\n        {\n          id: \"req-002\",\n          pickup: \"Airport Terminal 2\",\n          dropoff: \"Business District\",\n          distance: \"8.7 km\",\n          estimatedFare: 28.75,\n          customerName: \"Mike Chen\",\n          requestedAt: new Date(Date.now() - 5 * 60000).toISOString()\n        },\n        {\n          id: \"req-003\",\n          pickup: \"University Campus\",\n          dropoff: \"Shopping Center\",\n          distance: \"4.1 km\",\n          estimatedFare: 15.25,\n          customerName: \"Emma Wilson\",\n          requestedAt: new Date(Date.now() - 1 * 60000).toISOString()\n        }\n      ]\n\n      // Mock current ride (sometimes null)\n      const mockCurrentRide: CurrentRide | null = Math.random() > 0.7 ? {\n        id: \"ride-active-001\",\n        pickup: \"City Center Plaza\",\n        dropoff: \"Residential Area\",\n        customerName: \"John Doe\",\n        customerPhone: \"+1 (555) 987-6543\",\n        status: \"arriving\",\n        fare: 18.50\n      } : null\n\n      setDriverStats(mockStats)\n      setAvailableRides(mockRides)\n      setCurrentRide(mockCurrentRide)\n      setLoading(false)\n    }\n\n    fetchDriverData()\n\n    // Set up polling for new ride requests\n    const interval = setInterval(() => {\n      if (isOnline) {\n        fetchDriverData()\n      }\n    }, 15000) // Poll every 15 seconds when online\n\n    return () => clearInterval(interval)\n  }, [isOnline])\n\n  const handleAcceptRide = async (rideId: string) => {\n    try {\n      // Simulate API call to accept ride\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      // Remove from available rides and set as current ride\n      const acceptedRide = availableRides.find(ride => ride.id === rideId)\n      if (acceptedRide) {\n        setCurrentRide({\n          id: acceptedRide.id,\n          pickup: acceptedRide.pickup,\n          dropoff: acceptedRide.dropoff,\n          customerName: acceptedRide.customerName,\n          customerPhone: \"+1 (555) 123-4567\", // Mock phone\n          status: \"accepted\",\n          fare: acceptedRide.estimatedFare\n        })\n        setAvailableRides(prev => prev.filter(ride => ride.id !== rideId))\n      }\n    } catch (error) {\n      console.error('Failed to accept ride:', error)\n    }\n  }\n\n  const getTimeAgo = (dateString: string) => {\n    const now = new Date()\n    const past = new Date(dateString)\n    const diffMinutes = Math.floor((now.getTime() - past.getTime()) / 60000)\n    \n    if (diffMinutes < 1) return 'Just now'\n    if (diffMinutes === 1) return '1 minute ago'\n    return `${diffMinutes} minutes ago`\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'accepted': return 'bg-blue-100 text-blue-800'\n      case 'arriving': return 'bg-orange-100 text-orange-800'\n      case 'in-progress': return 'bg-green-100 text-green-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-black border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading driver dashboard...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-black mb-2\">Driver Dashboard</h1>\n              <p className=\"text-gray-600\">Manage your rides and earnings</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Label htmlFor=\"online-status\">Go Online</Label>\n                <Switch\n                  id=\"online-status\"\n                  checked={isOnline}\n                  onCheckedChange={setIsOnline}\n                />\n              </div>\n              <Badge className={isOnline ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}>\n                {isOnline ? 'Online' : 'Offline'}\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        {driverStats && (\n          <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 mb-8\">\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-black\">${driverStats.todayEarnings.toFixed(2)}</p>\n                  <p className=\"text-sm text-gray-600\">Today's Earnings</p>\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-black\">${driverStats.weeklyEarnings.toFixed(2)}</p>\n                  <p className=\"text-sm text-gray-600\">This Week</p>\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-black\">{driverStats.totalRides}</p>\n                  <p className=\"text-sm text-gray-600\">Total Rides</p>\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-black\">{driverStats.rating}</p>\n                  <p className=\"text-sm text-gray-600\">Rating ★</p>\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold text-black\">{driverStats.onlineHours}h</p>\n                  <p className=\"text-sm text-gray-600\">Online Today</p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Current Ride */}\n          <div className=\"lg:col-span-1\">\n            <h2 className=\"text-xl font-semibold mb-4\">Current Ride</h2>\n            {currentRide ? (\n              <Card className=\"border-2 border-green-200\">\n                <CardHeader>\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <CardTitle className=\"text-lg\">Active Ride</CardTitle>\n                      <CardDescription>#{currentRide.id.slice(-6)}</CardDescription>\n                    </div>\n                    <Badge className={getStatusColor(currentRide.status)}>\n                      {currentRide.status === 'accepted' ? 'Accepted' : \n                       currentRide.status === 'arriving' ? 'Arriving' : 'In Progress'}\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Customer</p>\n                      <p className=\"font-medium\">{currentRide.customerName}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">From</p>\n                      <p className=\"font-medium\">{currentRide.pickup}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">To</p>\n                      <p className=\"font-medium\">{currentRide.dropoff}</p>\n                    </div>\n                    <div className=\"flex justify-between items-center pt-2 border-t\">\n                      <span className=\"text-lg font-semibold\">${currentRide.fare.toFixed(2)}</span>\n                      <Link href={`/driver/ride/${currentRide.id}`}>\n                        <Button size=\"sm\" className=\"bg-black hover:bg-gray-800 text-white\">\n                          Manage Ride\n                        </Button>\n                      </Link>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ) : (\n              <Card>\n                <CardContent className=\"text-center py-12\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                    <span className=\"text-gray-400 text-2xl\">🚗</span>\n                  </div>\n                  <p className=\"text-gray-600 mb-2\">No active ride</p>\n                  <p className=\"text-sm text-gray-500\">\n                    {isOnline ? 'Waiting for ride requests...' : 'Go online to receive ride requests'}\n                  </p>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n\n          {/* Available Rides */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold\">Available Rides</h2>\n              <Badge variant=\"outline\">\n                {availableRides.length} requests\n              </Badge>\n            </div>\n            \n            {!isOnline ? (\n              <Card>\n                <CardContent className=\"text-center py-12\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                    <span className=\"text-gray-400 text-2xl\">📱</span>\n                  </div>\n                  <p className=\"text-gray-600 mb-2\">You're offline</p>\n                  <p className=\"text-sm text-gray-500\">Turn on \"Go Online\" to start receiving ride requests</p>\n                </CardContent>\n              </Card>\n            ) : availableRides.length === 0 ? (\n              <Card>\n                <CardContent className=\"text-center py-12\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                    <span className=\"text-gray-400 text-2xl\">⏳</span>\n                  </div>\n                  <p className=\"text-gray-600 mb-2\">No ride requests</p>\n                  <p className=\"text-sm text-gray-500\">New requests will appear here automatically</p>\n                </CardContent>\n              </Card>\n            ) : (\n              <div className=\"space-y-4\">\n                {availableRides.map((ride) => (\n                  <Card key={ride.id} className=\"hover:shadow-md transition-shadow\">\n                    <CardContent className=\"pt-6\">\n                      <div className=\"flex justify-between items-start mb-4\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex justify-between items-center mb-2\">\n                            <h3 className=\"font-semibold\">{ride.customerName}</h3>\n                            <span className=\"text-lg font-bold\">${ride.estimatedFare.toFixed(2)}</span>\n                          </div>\n                          <p className=\"text-sm text-gray-600 mb-1\">Distance: {ride.distance}</p>\n                          <p className=\"text-xs text-gray-500\">{getTimeAgo(ride.requestedAt)}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-2 mb-4\">\n                        <div>\n                          <p className=\"text-sm text-gray-600\">Pickup</p>\n                          <p className=\"font-medium text-sm\">{ride.pickup}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-600\">Drop-off</p>\n                          <p className=\"font-medium text-sm\">{ride.dropoff}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex gap-2\">\n                        <Button \n                          className=\"flex-1 bg-black hover:bg-gray-800 text-white\"\n                          onClick={() => handleAcceptRide(ride.id)}\n                          disabled={!!currentRide}\n                        >\n                          Accept Ride\n                        </Button>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          className=\"border-gray-300\"\n                        >\n                          Details\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}